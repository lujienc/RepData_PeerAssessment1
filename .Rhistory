showME(p2(20))
source(showME(p2(20)))
source(showMe(p2(20)))
source(showMe)
showMe(p2(20))
showMe(p2(2))
p1
?fun
?rgb
p3 <- colorRampPalette(c=("blue", "green"), alpha=0.5)
p3 <- colorRampPalette(c=("blue", "green"), 0.5)
p3 <- colorRampPalette(c("blue", "green"), alpha=0.5)
p3(5)
plot(x, y, pch=19, col=rgb(0, 0.5. 0.5))
plot(x, y, pch=19, col=rgb(0, 0.5, 0.5))
plot(x, y, pch=19, col=rgb(0, 0.5, 0.5, 0.3))
cols <- brewer.pal(3, "BuGn")
showMd(cols)
source(showMe)
showMd(cols)
showMe(cols)
pal <- colorRampPalette(cols)
showMe(pal(3))
showMe(pal(20))
image(volcano, col=pal(20))
image(volcano, col=p1(20))
library(swirl)
swirl()
str(mpg)
qplot(displ, hwy, data = mpg)
qplot(displ, hwy, data = mpg, color = drv)
qplot(displ, hwy, data = mpg, color = drv, geom=C("point", "smooth"))
qplot(displ, hwy, data = mpg, color = drv, geom = c("point", "smooth"))
qplot(hwy, data = mpg, color = drv)
qplot(y = hwy, data = mpg, color = drv)
myhigh
qplot(drv, hwy, data = mpg, geom="boxplot")
qplot(drv, hwy, data = mpg, geom="boxplot", color = manufacturer)
qplot(hwy, data = mpg, fill = drv)
qplot(displ, hwt, data = mpg, facets = .~drv)
qplot(displ, hwy, data = mpg, facets = .~drv)
qplot(hwt, data = mpg, facets = drv~., binwidth = 2)
qplot(hwy, data = mpg, facets = drv~., binwidth = 2)
qplot(displ, hwy, data = mpg, geom=c("point", "smooth"), facets = .~drv, method = "loess")
ggplot(mpg, aes(displ, hwy)
)
ggplot(mpg, aes(displ, hwy))
g <- ggplot(mpg, aes(displ, hwy))
summary(g)
g + geom_point()
geom_smooth()
g + geom_point() + geom_smooth()
g + geom_point() + geom_smooth(method = "lm")
g + geom_point() + geom_smooth(method = "lm") + facet_grid(.~drv)
g + geom_point() + geom_smooth(method = "lm") + facet_grid(.~drv) + ggtitle("Swirl Rules!")
g + geom_point(color = "pink", size = 4, alpha = 0.5)
g + geom_point(aes(color = drv), size = 4, alpha = 0.5)
g + geom_point(aes(color = drv)) + labs(title="Swirl Rules!") + labs(x = "Displacement", y = "Hwy Mileage")
g + geom_point(aes(color = drv), size = 2, alpha = 0.5) + geom_smooth(size = 4, lty = 3, method = "lm", se = FALSE)
g + geom_point(aes(color = drv), size = 2, alpha = 0.5) + geom_smooth(size = 4, linetype = 3, method = "lm", se = FALSE)
g + geom_point(aes(color = drv)) + theme_bw(base_family = "Times")
plot(myx, myy, type = "1", ylim=c(-3, 3))
plot(myx, myy, type = 1, ylim=c(-3, 3))
plot(myx, myy, type = "1", ylim=c(-3, 3))
plot(myx, myy, type = "l", ylim=c(-3, 3))
g <- ggplot(testdat, ase(myx, myy))
g <- ggplot(testdat, aes(myx, myy))
g + geom_line()
g + geom_line() + ylim(-3, 3)
g + geom_line() + coord_cartesian(ylim = c(-3, 3))
g <- ggplot(mpg, aes(disp, hwy, color = factor(year)))
g <- ggplot(mpg, aes(x = disp, y = hwy, color = factor(year)))
g <- ggplot(mpg, aes(x = displ, y = hwy, color = factor(year)))
g + geom_point()
g + geom_point() + facet_grid(drv ~ cyl, margins = TRUE)
g + geom_point() + facet_grid(drv ~ cyl, margins = TRUE) + geom_smooth(method = "lm", se = FALSE, size = 2, color = "black")
g + geom_point() + facet_grid(drv ~ cyl, margins = TRUE) + geom_smooth(method = "lm", se = FALSE, size = 2, color = "black") + labs(x = "Displacement", y = "Highway Mileage", title = "Swirl Rules!")
str(diamond)
str(diamonds)
qplot(price, data = diamonds)
range(diamonds$prince)
range(diamonds$price)
qplot(price, data = diamonds, bindwith = 18497/30)
qplot(price, data = diamonds, bindwidth = 18497/30)
qplot(price, data = diamonds, binwidth = 18497/30)
brk
counts
qplot(price, data = diamonds, binwidth = 18497/30, fill = cut)
qplot(price, data = diamonds, geom = "density")
qplot(price, data = diamonds, geom = "density", fill = cut)
qplot(price, data = diamonds, geom = "density", color = cut)
qplot(carat, price, data = diamonds)
qplot(carat, price, data = diamonds, shape = cut)
qplot(carat, price, data = diamonds, color = cut)
qplot(carat, price, data = diamonds, color = cut, geom = c("point", "smooth"), method = "lm")
qplot(carat, price, data = diamonds, color = cut, geom = c("point", "smooth"), method = "lm", facet = . ~ cut)
qplot(carat, price, data = diamonds, color = cut, geom = c("point", "smooth"), method = "lm", facets = . ~ cut)
g <- ggplot(diamonds, aes(depth, price))
summary(g)
g + geom_point(alpha = 1/3)
cutpoints <- quantile(diamonds$carat, seq(o, 1, length = 4), na.rm = TRUE)
cutpoints <- quantile(diamonds$carat, seq(0, 1, length = 4), na.rm = TRUE)
cutpoints
diamonds$car2 <- cutpoints
diamonds$car2 <- cut(diamonds$carat, cutpoints)
g <- ggplot(diamonds, aes(depth, price))
g + geom_point(alpha = 1/3) + facet_grip(cut ~ car2)
g + geom_point(alpha = 1/3) + facet_grid(cut ~ car2)
diamonds[myd, ]
g + geom_point(alpha = 1/3) + facet_grid(cut ~ car2) + geom_smooth(method = "lm", size = 3, color = "pink")
g <- ggplot(diamonds, aes(carat, price))
ggplot(diamonds, aes(carat, price)) + geom_boxplot() + facet_grid(. ~ cut)
q()
library(swirl)
install_from_swirl("Getting and Cleaning Data")
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
mydf <- read.csv(path2csv, stringAsFactors = FALSE)
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran,-time)
select(cran, -(X:size))
select(cran, -5:20)
select(cran, -(5:20))
-5:20
-(5:20)
select(cran, -(X:size))
filster(cran, package = "swirl")
filter(cran, package = "swirl")
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version <= "3.1.1", country == "IN")
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "IN" | country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3, 5, NA, 10))
!is.na(c(3, 5, NA, 10))
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
cran3
muttate(cra2, size_mb = size/2^20)
mutate(cran3, size_mb = size/2^20)
mutate(cran3, size_mb = size/2^20, size_gb = size_mb/2^10)
mutate(cran3, corrct_size = size + 1000)
mutate(cran3, correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))
q()
library(swirl)
swirl()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = lubridate)
this_day <- today()
this_day
year(this_day)
wday(this_day)
wday(this_day, label = TRUE)
this_moment <- now()
this_moment
hour(this_moment)
my_date<- ymd("1989-05-17")
my_Date
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hous = 8, minutes = 34, seconds = 55)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment(this_moment, hours = 16, minutes = 27)
update (this_moment, hours = 16, minutes = 28)
update (this_moment, hours = 10, minutes = 16, seconds = 0)
this_moment <- update (this_moment, hours = 10, minutes = 16, seconds = 0)
this_moment
nyc <- now(tz = "America/New_York")
nyc
depart <- nyc + days(2)
depart
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive <- depart + hours(15) + minutes(50)
?with_tz
arrive <- with_tz(arrive, "Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008"), tz = "Singapore")
last_time <- mdy(("June 17, 2008"), tz = "Singapore")
last_time <- mdy("June 17, 2008", tz = "Singapore")
last_time
?new_interval
how_long <- new_interval(last_time, arrive, tzone = attr(last_time, "tzone"))
how_long <- new_interval(last_time, arrive)
as.period(how_long)
stopwatch()
q()
install.packages("knitr")
?knitr
library(knitr)
?"knitr"
library(swirl)
swirl()
install_from_swirl("Statistical Inference")
swirl()
33/36
deck
52
4/52
0
12/52
2/51
(1.6*0.8)/2
0.64
mypdf
integrate(mypdf, 0, 1.6)
sqrt(1/2)
sqrt(2)
0.997*0.001
(1-0.985)*(1-0.001)
(0.000997)/(0.000997+0.014985)
3.5
expect_dice
dice_high
expect_dice(dice_high)
expect_dice(dice_low)
0.5*(edh+edl)
integrate(t^2/2, 0, 2)
integrate(myfunc, 0, 2)
spop
mean(spop)
allsam
apply(allsam, 1, mean)
mean(smeans)
?apply
swirl()
dice_sqr
ex2_fair <- sum(dice-sqr*dice_fair)
ex2_fair <- sum(dice_sqr*dice_fair)
ex2_fair - (3.5*3.5)
ex2_fair-3.5^2
sum(dice_sqr*dice_high)-edh^2
sa(apply(matrix(rnorm(1000), 1000), 1, mean))
sd(apply(matrix(rnorm(1000), 1000), 1, mean))
sd(apply(matrix(rnorm(10000), 1000), 1, mean))
1/sqrt(10)
1/sqrt(120)
sd(apply(matrix(rnorm(10000), 1000), 1, mean))
sd(apply(matrix(runif(10000), 1000), 1, mean))
2/sqrt(10)
sd(apply(matrix(rpois(10000, 4), 1000), 1, mean))
1/(2*sqrt(10))
sd(apply(matrix(sample(0:1, 10000, TRUE), 1000), 1, mean))
p <- c(0.1, 0.2, 0.3, 0.4)
x <- 2:5
x
p
sum(p*x)
t1 <- sum(p*x)
xn <- c(4, 9, 16, 25)
t2 <- sum(p*xn)
t2-t1^2
pnorm(93, 100, 10)
pnorm(95, 100, 10)
qnorm(95, 100, 10)
?qnorm()
qnorm(0.95, 100, 10)
qnorm(0.95, 100, 10/sqrt(50))
1-rbinom(6, 4, 0.5)
1-pbinom(4, 6, 0.5)
1-pnorm(0.51, 0.5, 1/sqrt(1200))
x <- 1:6
p <- c(rep(1/6, 6))
p
x
t <- sum(p*x)
xn <- c(1, 4, 9, 16, 25, 36)
s <- sum(p*xn)
v <- x-t^2
v
v <- s-t^2
v
?possion
?dpossion()
?possion()
?distribution
t <- 0
for i in 0:20 {
t <- t+ dpois(i, 16.5)*ppois(20-i, 16.5)
}
t
t <- 0
for (i in 0:20) {
t <- t+ dpois(i, 16.5)*ppois(20-i, 16.5)
}
t
rpois(20, 16.5*2)
ppois(20, 16.5*2)
pnorm(70, 80, 10)
qnorm(0.95, 1100, 75)
qnorm(0.95, 1100, 7.5)
qbinom(4, 5, 0.5, lower.tail = FALSE)
pbinom(4, 5, 0.5, lower.tail=FALSE)
pnorm(14, 15, 1)-pnorm(16, 15, 1)
0.5+1.96*(sqrt(1/(12*1000)))
0.5-1.96*(sqrt(1/(12*1000)))
qpois(10, 15)
ppois(10, 15)
rbinom(4, 5, 0.5)
dbinom(4, 5, 0.5)
dbinom(5, 5, 0.5)
pbinom(4, 5, 0.5, lower.tail=FALSE)
pbinom(4, 5, 0.5)
?pbinom()
dbinom(4, 5, 0.5)
dbinom(5, 5, 0.5)
pinom(3, 5, 0.5, lower.tail=FALSE)
pbinom(3, 5, 0.5, lower.tail = FALSE)
pnorm(1.96, 0, 1)
pnorm(1.96, 0, 1, lower.tail=FALSE)
library(dplyr)
library(ggplot2)
options(scipen = 1, digits = 2)
setwd("D:/Data Science Certificate/Course 5_Reproducible Research/Projects/Project 1/RepData_PeerAssessment1")
activity <- read.csv(unz("activity.zip", "activity.csv"), header = TRUE)
activity$date <- as.Date(activity$date, "%Y-%m-%d")
activity <- activity %>%
mutate(interval=(interval%/%100)*12+(interval%%100)/5)
str(activity)
infmiss <- is.na(activity$steps)
sum(infmiss)
actimpt <- activity %>%
group_by(interval) %>%
mutate(intmedian=quantile(steps, probs = 0.5))
actimpt <- activity %>%
group_by(interval) %>%
mutate(intmedian=quantile(steps, probs = 0.5, na.rm = TRUE))
str(actimpt)
actimpt <- activity %>%
group_by(interval) %>%
summarize(intmedian=quantile(steps, probs = 0.5, na.rm = TRUE))
str(actimpt)
head(actimpt)
intavg <- activity %>%
group_by(interval) %>%
summarize(stepmean=mean(steps, na.rm = TRUE))
str(intavg)
actimpt <- activity %>%
group_by(interval) %>%
mutate(intmedian=mean(steps, na.rm = TRUE))
str(actimpt)
head(actimpt)
head(intavg)
dim(actimpt)
dim(intavg)
actimpt[289:290,]
actimpt <- activity %>%
group_by(interval) %>%
mutate(intmean=mean(steps, na.rm = TRUE)) %>%
mutate(steps=(is.na(steps)*intmean + !is.na(steps)*steps))
head(actimpt)
actimpt <- activity %>%
group_by(interval) %>%
mutate(intmean=mean(steps, na.rm = TRUE)) %>%
mutate(nsteps=(is.na(steps)*intmean + !is.na(steps)*steps))
head(actimpt)
actimpt <- activity %>%
group_by(interval) %>%
mutate(intmean=mean(steps, na.rm = TRUE)) %>%
mutate(if(is.na(steps)){steps = intmean})
actimpt <- activity %>%
group_by(interval) %>%
mutate(intmean=mean(steps, na.rm = TRUE)) %>%
mutate(steps[is.na(steps)]=intmean)
actimpt <- activity %>%
group_by(interval) %>%
mutate(intmean=mean(steps, na.rm = TRUE)) %>%
mutate(steps[is.na(steps)]=intmean[is.na(steps)])
actimpt <- activity %>%
group_by(interval) %>%
mutate(intmean=mean(steps, na.rm = TRUE))
actimpt$steps[is.na(actimpt$steps)]
actimpt <- activity %>%
group_by(interval) %>%
mutate(intmean=mean(steps, na.rm = TRUE)) %>%
steps[is.na(steps)]=intmean[is.na(steps)]
actimpt <- activity %>%
group_by(interval) %>%
mutate(intmean=mean(steps, na.rm = TRUE))
actimpt$steps[is.na(actimpt$steps)]=actimpt$intmean[is.na(actimpt$steps)]
head(actimpt)
actimpt[289:293,]
actimpt <- activity %>%
group_by(interval) %>%
mutate(intmean=mean(steps, na.rm = TRUE))
mutate(steps=ifelse(is.na(steps), intmean, steps))
actimpt <- activity %>%
group_by(interval) %>%
mutate(intmean=mean(steps, na.rm = TRUE)) %>%
mutate(steps=ifelse(is.na(steps), intmean, steps))
head(actimpt)
actimpt[289;295, ]
actimpt[289:295, ]
?weekdays()
actimpt <- actimpt %>%
mutate(weekd <- weekday(date))
actimpt <- actimpt %>%
mutate(weekd <- weekdays(date))
head(actimpt)
unique(actimp$weekd)
unique(actimpt$weekd)
str(actimpt)
head(actimpt)
actimpt <- actimpt %>%
mutate(temp=weekdays(date)) %>%
mutate(weekd=ifselse(temp==("Sunday"|"Saturday"), 1, 0))
actimpt <- actimpt %>%
mutate(temp=weekdays(date)) %>%
mutate(weekd=ifelse(temp==("Sunday"|"Saturday"), 1, 0))
actimpt <- actimpt %>%
mutate(temp=weekdays(date)) %>%
mutate(weekd=ifelse(grespl(temp, "'S"), 1, 0))
actimpt <- actimpt %>%
mutate(temp=weekdays(date)) %>%
mutate(weekd=ifelse(grepl(temp, "'S"), 1, 0))
warnings()
actimpt <- actimpt %>%
mutate(temp=weekdays(date))
grepl(actimpt$temp)
grepl(actimpt$temp, "`S")
actimpt <- activity %>%
group_by(interval) %>%
mutate(intmedian=quantile(steps, probs = 0.5, na.rm = TRUE)) %>%
mutate(steps=ifelse(is.na(steps), intmedian, steps))
actimpt <- actimpt %>%
mutate(temp=weekdays(date))
head(actimpt)
actimpt <- actimpt %>%
mutate(temp=weekdays(date)) %>%
mutate(weekd=ifelse(grepl("'S", temp), 1, 0))
head(actimpt)
table actimpt$temp actimpt$weekd
?table()
table (actimpt$temp, actimpt$weekd)
actimpt <- actimpt %>%
mutate(temp=weekdays(date)) %>%
mutate(weekd=ifelse(grepl("Sunday|Saturday", temp), 1, 0))
head(actimpt)
table (actimpt$temp, actimpt$weekd)
actimpt <- actimpt %>%
mutate(temp=weekdays(date)) %>%
mutate(weekd=ifelse(grepl("Sunday|Saturday", temp), 1, 0)) %>%
factor(weekd, levels= c(0, 1), labels=c("Weekdays", "Weekends"))
actimpt <- actimpt %>%
mutate(temp=weekdays(date)) %>%
mutate(weekd=ifelse(grepl("Sunday|Saturday", temp), "Weekends", "Weekdays"))
head(actimpt)
actimpt <- actimpt %>%
mutate(temp=weekdays(date)) %>%
mutate(weekd=ifelse(grepl("Sunday|Saturday", temp), "Weekend", "Weekday"))
head(actimpt)
table (actimpt$temp, actimpt$weekd)
intavg <- actimpt %>%
group_by(weekd, interval) %>%
summarize(stepmean=mean(steps, na.rm = TRUE))
str(intavg)
f4 <- ggplot(data = intavg)
f4 + facet(weekd) +
geom_line(aes(interval, stepmean), type = "1") +
ggtitle ("Average steps for each 5-minute interval") +
labs(x = "5-minute interval (0-287)", y = "Number of steps")
f4 <- ggplot(data = intavg)
f4 + facet_wrap(~weekd) +
geom_line(aes(interval, stepmean), type = "1") +
ggtitle ("Average steps for each 5-minute interval") +
labs(x = "5-minute interval (0-287)", y = "Number of steps")
f4 <- ggplot(data = intavg)
f4 + facet_wrap(~weekd, col = 1) +
geom_line(aes(interval, stepmean), type = "1") +
ggtitle ("Average steps for each 5-minute interval") +
labs(x = "5-minute interval (0-287)", y = "Number of steps")
f4 <- ggplot(data = intavg)
f4 + facet_wrap(~weekd, ncol = 1) +
geom_line(aes(interval, stepmean), type = "1") +
ggtitle ("Average steps for each 5-minute interval") +
labs(x = "5-minute interval (0-287)", y = "Number of steps")
labs(x = "5-minute interval (0-287)", y = "Number of steps")
